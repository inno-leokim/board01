plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.6'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.brand13'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools' // 기본적으로 cache를 false한다.
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' //springboot 3.0 이상
	// implementation 'com.querydsl:querydsl-jpa' //springboot 3.0 미만
	implementation 'com.querydsl:querydsl-core'
	implementation 'com.querydsl:querydsl-collections'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta" //springboot 3.0 이상: jakarta, 3.0 미만: jpa
	// annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta" //springboot 3.0 이상: jakarta, 3.0 미만: jpa
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL 설정부. intelliJ 사용할 때 
// def generated = 'src/main/generated'

// tasks.withType(JavaCompile){
// 	options.getGeneratedSourceOutputDirectory().set(file(generated))
// }

// sourceSets {
// 	main.java.srcDirs += [ generated ]
// }

// clean {
// 	delete file(generated)
// }

